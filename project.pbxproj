//
//  main.swift
//  HW 2 - 1
//
//  Created by cpu on 22/12/22.
//

import Foundation

//print("Assalomu aleikum!")

// HW 2m. 1.1
//2. Создать класс "Магазин" и "Продукт" и задать им свойства
//Также создать функцию добавления продукта в магазин и отображения товаров в магазине
//
//Доп. Создать класс "Банк" и "Клиент"
//создать функции для:
//1) Подсчета клиентов банка
//2) Отображения баланса по ID или фамилии клиента
//3) Перевода средств от клиента к другому клиенту
//
//Критерии приемки:
//Код каждого студента должен быть уникальным
//Классы должны находиться к отдельных файлах
//Вся логика в main
//Весь проект должен находиться в github (Все решения задач должны находиться в одном проекте так-же в коде должны комментарии которые доказывают работоспособность вашего кода)

class Car{
    var carBrand: String
    var enginePower: Double
    var  year: Int
    var driveUnit: String
    var fuel: String
    var steeringWheel: String
    var body: String

    func update (carBrand: String, enginePower: Double, year: Int, driveUnit: String, fuel: String, steeringWheel: String, body: String){
        print("\(carBrand), \(enginePower), \(year), \(driveUnit), \(fuel), \(steeringWheel), \(body)")
    }
    init(carBrand: String, enginePower: Double, year: Int, driveUnit: String, fuel: String, steeringWheel: String, body: String) {
        self.carBrand = carBrand
        self.enginePower = enginePower
        self.year = year
        self.driveUnit = driveUnit
        self.fuel = fuel
        self.steeringWheel = steeringWheel
        self.body = body
    }
    func showInfo(){
        print("carBrand \(self.carBrand), enginePower \(self.enginePower), year  \(self.year), driveUnit \(self.driveUnit), fuel \(self.fuel), steeringWheel \(self.steeringWheel), body \(self.body)")
    }
}
var mercedes = Car (carBrand: "Мерседес", enginePower: 5.5, year: 2015, driveUnit: "Передний", fuel: "Бензин", steeringWheel: "Левый", body: "Седан")
var bentley = Car (carBrand: "Бентли", enginePower: 5.0, year: 2018, driveUnit: "Передний", fuel: "Бензин", steeringWheel: "Левый", body: "Седан")

var carArray: [Car] = [mercedes, bentley]
for array in carArray {
    array.showInfo()
}



class Shop{
    var name: String
    var adress: String
    var tovar: [Product] = [Product]()
    init(name: String, adress: String){
        self.name = name
        self.adress = adress
     
    }
    func showInfo(){
        print("название магазина - \(name), адрес магазина - \(adress)")
        for i in tovar{
            print("название продукта - \(i.name), цена - \(i.prise), производство - \(i.manufacturer), остаток товара - \(i.quantity)")
        }
    }
    func addTovar(add:Product){
        tovar.append(add)
    }
}
var frunze = Shop(name: "Frunze", adress: "Gorkiy street 3Б")


class Product{
    var name: String
    var prise: Int
    var manufacturer: String
    var quantity: Int
    
    init(name: String, prise: Int, manufacturer: String, quantity: Int){
        self.name = name
        self.prise = prise
        self.manufacturer = manufacturer
        self.quantity = quantity
    }
    func showInfo(){
        print("name \(self.name), prise \(self.prise), manufacturer \(self.manufacturer), quantity \(self.quantity)")
    }
}
var milk = Product(name: "milk", prise: 50, manufacturer: "Kyrgyastan", quantity: 100)
var cola = Product(name: "cola", prise: 60, manufacturer: "Kyrgyastan", quantity: 150)
var apple = Product(name: "apple", prise: 70, manufacturer: "Kyrgyastan", quantity: 20)
var chocolate = Product(name: "chocolate", prise: 50, manufacturer: "Kyrgyastan", quantity: 40)
var lemonade = Product(name: "lemonade", prise: 45, manufacturer: "Kyrgyastan", quantity: 50)
var bread = Product(name: "bread", prise: 30, manufacturer: "Kyrgyastan", quantity: 70)

frunze.addTovar(add: milk)
frunze.addTovar(add: cola)
frunze.addTovar(add: apple)
frunze.addTovar(add: chocolate)
frunze.addTovar(add: lemonade)
frunze.addTovar(add: bread)
frunze.showInfo()

